# See https://github.com/hvr/multi-ghc-travis
# See also https://github.com/ekmett/lens/blob/master/.travis.yml for container-based example.

# NOT `language: haskell`
language: c
# explicitly request container-based infrastructure
sudo: false

matrix:
  include:
    - env: CABALVER=1.22 GHCVER=7.10.2
      addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.2],sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head
      addons: {apt: {packages: [cabal-install-head,ghc-head],  sources: [hvr-ghc]}}
  allow_failures:
   - env: CABALVER=head GHCVER=head

before_install:
 - export PATH=~/.cabal/bin:/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
  - cabal --version
  - travis_retry cabal update
  - "sed -i  's/^jobs:.*$/jobs: 2/' $HOME/.cabal/config" # See https://github.com/hvr/multi-ghc-travis#known-issues
  - cabal install --only-dependencies --enable-tests
# See https://github.com/ekmett/lens/blob/master/.travis.yml for some complex caching procedures.

script:
  - cabal configure --enable-tests -v2  # -v2 provides useful information for debugging
  - cabal build   # this builds all libraries and executables (including tests)
  # - cabal test
  - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
  - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
    (cd dist && cabal install --force-reinstalls "$SRC_TGZ")
